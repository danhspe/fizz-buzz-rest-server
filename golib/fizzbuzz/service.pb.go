// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package fizzbuzz

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 262 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xc1, 0x4a, 0x03, 0x31,
	0x10, 0x86, 0xa9, 0x07, 0xc1, 0x94, 0xad, 0x12, 0x45, 0x30, 0x8a, 0x87, 0x1e, 0x85, 0x4d, 0x40,
	0x0f, 0xa2, 0xc7, 0x82, 0xf6, 0x6e, 0x6f, 0xc5, 0xcb, 0x66, 0x9d, 0x6e, 0x03, 0x6d, 0x12, 0x77,
	0x26, 0x82, 0x39, 0xfa, 0x0a, 0x3e, 0x96, 0x47, 0x5f, 0xc1, 0x07, 0x91, 0xdd, 0x6d, 0x76, 0x3d,
	0x78, 0xcc, 0xff, 0xfd, 0xcc, 0x7c, 0x13, 0x96, 0x21, 0xd4, 0x6f, 0xa6, 0x04, 0xe9, 0x6b, 0x47,
	0x8e, 0x33, 0xa4, 0x82, 0x0c, 0x92, 0x29, 0x51, 0x4c, 0x56, 0x26, 0x46, 0x1d, 0x62, 0xec, 0x98,
	0x38, 0x1a, 0xd8, 0x2e, 0xb9, 0xa8, 0x9c, 0xab, 0x36, 0xa0, 0x0a, 0x6f, 0x54, 0x61, 0xad, 0x6b,
	0xb8, 0xb3, 0x89, 0x9e, 0xef, 0x68, 0xfb, 0xd2, 0x61, 0xa5, 0x60, 0xeb, 0xe9, 0xbd, 0x83, 0xd7,
	0x5f, 0x23, 0x76, 0xf8, 0x68, 0x62, 0x9c, 0x85, 0x18, 0x17, 0x9d, 0x02, 0x5f, 0xb2, 0xf1, 0x1c,
	0x28, 0xa5, 0xfc, 0x4c, 0xf6, 0x02, 0x29, 0x7b, 0x82, 0xd7, 0x00, 0x48, 0x42, 0xfc, 0x87, 0xd0,
	0x3b, 0x8b, 0x30, 0x3d, 0xf9, 0xf8, 0xfe, 0xf9, 0xdc, 0x9b, 0x4c, 0x0f, 0x54, 0xea, 0xdc, 0x8f,
	0xae, 0xf8, 0x33, 0xcb, 0xe6, 0x40, 0x8b, 0xfe, 0x02, 0x7e, 0x2a, 0x3b, 0x3d, 0x99, 0xf4, 0xe4,
	0x43, 0xa3, 0x27, 0x2e, 0xe5, 0x9f, 0x33, 0x87, 0x7e, 0x3f, 0xfe, 0xb8, 0x1d, 0x9f, 0xf1, 0xb1,
	0x1a, 0x7a, 0xb3, 0xbb, 0xe5, 0x6d, 0x65, 0x68, 0x1d, 0xb4, 0x2c, 0xdd, 0x56, 0xbd, 0x14, 0x76,
	0x8d, 0x1e, 0xda, 0xfd, 0x79, 0x23, 0x90, 0xd7, 0x80, 0x94, 0x37, 0x3f, 0x0d, 0xb5, 0xaa, 0xdc,
	0xc6, 0xe8, 0xde, 0x4d, 0xef, 0xb7, 0xfb, 0x6f, 0x7e, 0x03, 0x00, 0x00, 0xff, 0xff, 0xb6, 0xe9,
	0x1e, 0x78, 0x89, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FizzBuzzServiceClient is the client API for FizzBuzzService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FizzBuzzServiceClient interface {
	GetFizzBuzz(ctx context.Context, in *FizzBuzzRequest, opts ...grpc.CallOption) (*FizzBuzzResponse, error)
	GetStatistics(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*StatisticsResponse, error)
}

type fizzBuzzServiceClient struct {
	cc *grpc.ClientConn
}

func NewFizzBuzzServiceClient(cc *grpc.ClientConn) FizzBuzzServiceClient {
	return &fizzBuzzServiceClient{cc}
}

func (c *fizzBuzzServiceClient) GetFizzBuzz(ctx context.Context, in *FizzBuzzRequest, opts ...grpc.CallOption) (*FizzBuzzResponse, error) {
	out := new(FizzBuzzResponse)
	err := c.cc.Invoke(ctx, "/statistics.FizzBuzzService/GetFizzBuzz", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fizzBuzzServiceClient) GetStatistics(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*StatisticsResponse, error) {
	out := new(StatisticsResponse)
	err := c.cc.Invoke(ctx, "/statistics.FizzBuzzService/GetStatistics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FizzBuzzServiceServer is the server API for FizzBuzzService service.
type FizzBuzzServiceServer interface {
	GetFizzBuzz(context.Context, *FizzBuzzRequest) (*FizzBuzzResponse, error)
	GetStatistics(context.Context, *emptypb.Empty) (*StatisticsResponse, error)
}

// UnimplementedFizzBuzzServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFizzBuzzServiceServer struct {
}

func (*UnimplementedFizzBuzzServiceServer) GetFizzBuzz(ctx context.Context, req *FizzBuzzRequest) (*FizzBuzzResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFizzBuzz not implemented")
}
func (*UnimplementedFizzBuzzServiceServer) GetStatistics(ctx context.Context, req *emptypb.Empty) (*StatisticsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStatistics not implemented")
}

func RegisterFizzBuzzServiceServer(s *grpc.Server, srv FizzBuzzServiceServer) {
	s.RegisterService(&_FizzBuzzService_serviceDesc, srv)
}

func _FizzBuzzService_GetFizzBuzz_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FizzBuzzRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FizzBuzzServiceServer).GetFizzBuzz(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/statistics.FizzBuzzService/GetFizzBuzz",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FizzBuzzServiceServer).GetFizzBuzz(ctx, req.(*FizzBuzzRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FizzBuzzService_GetStatistics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FizzBuzzServiceServer).GetStatistics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/statistics.FizzBuzzService/GetStatistics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FizzBuzzServiceServer).GetStatistics(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _FizzBuzzService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "statistics.FizzBuzzService",
	HandlerType: (*FizzBuzzServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFizzBuzz",
			Handler:    _FizzBuzzService_GetFizzBuzz_Handler,
		},
		{
			MethodName: "GetStatistics",
			Handler:    _FizzBuzzService_GetStatistics_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
