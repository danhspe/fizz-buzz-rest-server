// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: service.proto

package fizzbuzz

import (
	context "context"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_service_proto protoreflect.FileDescriptor

var file_service_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x1a, 0x0e, 0x66, 0x69, 0x7a,
	0x7a, 0x62, 0x75, 0x7a, 0x7a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0xcb, 0x01, 0x0a, 0x0f, 0x46, 0x69, 0x7a,
	0x7a, 0x42, 0x75, 0x7a, 0x7a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5a, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x46, 0x69, 0x7a, 0x7a, 0x42, 0x75, 0x7a, 0x7a, 0x12, 0x19, 0x2e, 0x66, 0x69,
	0x7a, 0x7a, 0x62, 0x75, 0x7a, 0x7a, 0x2e, 0x46, 0x69, 0x7a, 0x7a, 0x42, 0x75, 0x7a, 0x7a, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x66, 0x69, 0x7a, 0x7a, 0x62, 0x75, 0x7a,
	0x7a, 0x2e, 0x46, 0x69, 0x7a, 0x7a, 0x42, 0x75, 0x7a, 0x7a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x22, 0x09, 0x2f, 0x66, 0x69, 0x7a,
	0x7a, 0x62, 0x75, 0x7a, 0x7a, 0x3a, 0x01, 0x2a, 0x12, 0x5c, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x1e, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x12, 0x0b, 0x2f, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x61, 0x6e, 0x68, 0x73, 0x70, 0x65, 0x2f, 0x66, 0x69, 0x7a,
	0x7a, 0x2d, 0x62, 0x75, 0x7a, 0x7a, 0x2d, 0x72, 0x65, 0x73, 0x74, 0x2d, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2f, 0x67, 0x6f, 0x6c, 0x69, 0x62, 0x2f, 0x66, 0x69, 0x7a, 0x7a, 0x62, 0x75, 0x7a,
	0x7a, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_service_proto_goTypes = []interface{}{
	(*FizzBuzzRequest)(nil),    // 0: fizzbuzz.FizzBuzzRequest
	(*emptypb.Empty)(nil),      // 1: google.protobuf.Empty
	(*FizzBuzzResponse)(nil),   // 2: fizzbuzz.FizzBuzzResponse
	(*StatisticsResponse)(nil), // 3: statistics.StatisticsResponse
}
var file_service_proto_depIdxs = []int32{
	0, // 0: statistics.FizzBuzzService.GetFizzBuzz:input_type -> fizzbuzz.FizzBuzzRequest
	1, // 1: statistics.FizzBuzzService.GetStatistics:input_type -> google.protobuf.Empty
	2, // 2: statistics.FizzBuzzService.GetFizzBuzz:output_type -> fizzbuzz.FizzBuzzResponse
	3, // 3: statistics.FizzBuzzService.GetStatistics:output_type -> statistics.StatisticsResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_service_proto_init() }
func file_service_proto_init() {
	if File_service_proto != nil {
		return
	}
	file_fizzbuzz_proto_init()
	file_statistics_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_proto_goTypes,
		DependencyIndexes: file_service_proto_depIdxs,
	}.Build()
	File_service_proto = out.File
	file_service_proto_rawDesc = nil
	file_service_proto_goTypes = nil
	file_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FizzBuzzServiceClient is the client API for FizzBuzzService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FizzBuzzServiceClient interface {
	GetFizzBuzz(ctx context.Context, in *FizzBuzzRequest, opts ...grpc.CallOption) (*FizzBuzzResponse, error)
	GetStatistics(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*StatisticsResponse, error)
}

type fizzBuzzServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFizzBuzzServiceClient(cc grpc.ClientConnInterface) FizzBuzzServiceClient {
	return &fizzBuzzServiceClient{cc}
}

func (c *fizzBuzzServiceClient) GetFizzBuzz(ctx context.Context, in *FizzBuzzRequest, opts ...grpc.CallOption) (*FizzBuzzResponse, error) {
	out := new(FizzBuzzResponse)
	err := c.cc.Invoke(ctx, "/statistics.FizzBuzzService/GetFizzBuzz", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fizzBuzzServiceClient) GetStatistics(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*StatisticsResponse, error) {
	out := new(StatisticsResponse)
	err := c.cc.Invoke(ctx, "/statistics.FizzBuzzService/GetStatistics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FizzBuzzServiceServer is the server API for FizzBuzzService service.
type FizzBuzzServiceServer interface {
	GetFizzBuzz(context.Context, *FizzBuzzRequest) (*FizzBuzzResponse, error)
	GetStatistics(context.Context, *emptypb.Empty) (*StatisticsResponse, error)
}

// UnimplementedFizzBuzzServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFizzBuzzServiceServer struct {
}

func (*UnimplementedFizzBuzzServiceServer) GetFizzBuzz(context.Context, *FizzBuzzRequest) (*FizzBuzzResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFizzBuzz not implemented")
}
func (*UnimplementedFizzBuzzServiceServer) GetStatistics(context.Context, *emptypb.Empty) (*StatisticsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStatistics not implemented")
}

func RegisterFizzBuzzServiceServer(s *grpc.Server, srv FizzBuzzServiceServer) {
	s.RegisterService(&_FizzBuzzService_serviceDesc, srv)
}

func _FizzBuzzService_GetFizzBuzz_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FizzBuzzRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FizzBuzzServiceServer).GetFizzBuzz(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/statistics.FizzBuzzService/GetFizzBuzz",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FizzBuzzServiceServer).GetFizzBuzz(ctx, req.(*FizzBuzzRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FizzBuzzService_GetStatistics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FizzBuzzServiceServer).GetStatistics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/statistics.FizzBuzzService/GetStatistics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FizzBuzzServiceServer).GetStatistics(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _FizzBuzzService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "statistics.FizzBuzzService",
	HandlerType: (*FizzBuzzServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFizzBuzz",
			Handler:    _FizzBuzzService_GetFizzBuzz_Handler,
		},
		{
			MethodName: "GetStatistics",
			Handler:    _FizzBuzzService_GetStatistics_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
